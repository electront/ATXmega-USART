
UART_Master.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000286  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000db  00800100  00800100  000002fa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002fa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000032c  2**2
                  CONTENTS, READONLY
  5 .debug_info   000005f4  00000000  00000000  0000036c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  00000960  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000001a  00000000  00000000  00000f02  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000208  00000000  00000000  00000f1c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 b7 00 	jmp	0x16e	; 0x16e <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e8       	ldi	r30, 0x86	; 134
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 3d       	cpi	r26, 0xDB	; 219
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 b0 00 	call	0x160	; 0x160 <main>
  9e:	0c 94 41 01 	jmp	0x282	; 0x282 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <Buffer_Inicializar>:
  a6:	fc 01       	movw	r30, r24
  a8:	e8 53       	subi	r30, 0x38	; 56
  aa:	ff 4f       	sbci	r31, 0xFF	; 255
  ac:	11 82       	std	Z+1, r1	; 0x01
  ae:	10 82       	st	Z, r1
  b0:	32 96       	adiw	r30, 0x02	; 2
  b2:	11 82       	std	Z+1, r1	; 0x01
  b4:	10 82       	st	Z, r1
  b6:	32 96       	adiw	r30, 0x02	; 2
  b8:	11 82       	std	Z+1, r1	; 0x01
  ba:	10 82       	st	Z, r1
  bc:	08 95       	ret

000000be <Buffer_Esta_Lleno>:
  be:	fc 01       	movw	r30, r24
  c0:	e4 53       	subi	r30, 0x34	; 52
  c2:	ff 4f       	sbci	r31, 0xFF	; 255
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	20 81       	ld	r18, Z
  c8:	31 81       	ldd	r19, Z+1	; 0x01
  ca:	24 36       	cpi	r18, 0x64	; 100
  cc:	31 05       	cpc	r19, r1
  ce:	09 f0       	breq	.+2      	; 0xd2 <Buffer_Esta_Lleno+0x14>
  d0:	80 e0       	ldi	r24, 0x00	; 0
  d2:	08 95       	ret

000000d4 <Buffer_Add>:
  d4:	0f 93       	push	r16
  d6:	1f 93       	push	r17
  d8:	cf 93       	push	r28
  da:	df 93       	push	r29
  dc:	fc 01       	movw	r30, r24
  de:	46 2f       	mov	r20, r22
  e0:	ec 01       	movw	r28, r24
  e2:	c4 53       	subi	r28, 0x34	; 52
  e4:	df 4f       	sbci	r29, 0xFF	; 255
  e6:	28 81       	ld	r18, Y
  e8:	39 81       	ldd	r19, Y+1	; 0x01
  ea:	24 36       	cpi	r18, 0x64	; 100
  ec:	31 05       	cpc	r19, r1
  ee:	e1 f0       	breq	.+56     	; 0x128 <Buffer_Add+0x54>
  f0:	8c 01       	movw	r16, r24
  f2:	06 53       	subi	r16, 0x36	; 54
  f4:	1f 4f       	sbci	r17, 0xFF	; 255
  f6:	d8 01       	movw	r26, r16
  f8:	8d 91       	ld	r24, X+
  fa:	9c 91       	ld	r25, X
  fc:	01 96       	adiw	r24, 0x01	; 1
  fe:	64 e6       	ldi	r22, 0x64	; 100
 100:	70 e0       	ldi	r23, 0x00	; 0
 102:	0e 94 19 01 	call	0x232	; 0x232 <__divmodhi4>
 106:	d8 01       	movw	r26, r16
 108:	8d 93       	st	X+, r24
 10a:	9c 93       	st	X, r25
 10c:	88 0f       	add	r24, r24
 10e:	99 1f       	adc	r25, r25
 110:	e8 0f       	add	r30, r24
 112:	f9 1f       	adc	r31, r25
 114:	64 2f       	mov	r22, r20
 116:	70 e0       	ldi	r23, 0x00	; 0
 118:	71 83       	std	Z+1, r23	; 0x01
 11a:	60 83       	st	Z, r22
 11c:	2f 5f       	subi	r18, 0xFF	; 255
 11e:	3f 4f       	sbci	r19, 0xFF	; 255
 120:	39 83       	std	Y+1, r19	; 0x01
 122:	28 83       	st	Y, r18
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	01 c0       	rjmp	.+2      	; 0x12a <Buffer_Add+0x56>
 128:	80 e0       	ldi	r24, 0x00	; 0
 12a:	df 91       	pop	r29
 12c:	cf 91       	pop	r28
 12e:	1f 91       	pop	r17
 130:	0f 91       	pop	r16
 132:	08 95       	ret

00000134 <Enviar_Trama>:
 134:	cf 93       	push	r28
 136:	df 93       	push	r29
 138:	82 e0       	ldi	r24, 0x02	; 2
 13a:	0e 94 17 01 	call	0x22e	; 0x22e <Usart_Enviar_Dato>
 13e:	82 e0       	ldi	r24, 0x02	; 2
 140:	0e 94 17 01 	call	0x22e	; 0x22e <Usart_Enviar_Dato>
 144:	85 e6       	ldi	r24, 0x65	; 101
 146:	0e 94 17 01 	call	0x22e	; 0x22e <Usart_Enviar_Dato>
 14a:	c0 e0       	ldi	r28, 0x00	; 0
 14c:	d1 e0       	ldi	r29, 0x01	; 1
 14e:	88 81       	ld	r24, Y
 150:	0e 94 17 01 	call	0x22e	; 0x22e <Usart_Enviar_Dato>
 154:	88 81       	ld	r24, Y
 156:	89 59       	subi	r24, 0x99	; 153
 158:	df 91       	pop	r29
 15a:	cf 91       	pop	r28
 15c:	0c 94 17 01 	jmp	0x22e	; 0x22e <Usart_Enviar_Dato>

00000160 <main>:
 160:	f8 94       	cli
 162:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <Usart_init>
 166:	78 94       	sei
 168:	0e 94 9a 00 	call	0x134	; 0x134 <Enviar_Trama>
 16c:	ff cf       	rjmp	.-2      	; 0x16c <main+0xc>

0000016e <__vector_18>:
 16e:	1f 92       	push	r1
 170:	0f 92       	push	r0
 172:	0f b6       	in	r0, 0x3f	; 63
 174:	0f 92       	push	r0
 176:	11 24       	eor	r1, r1
 178:	2f 93       	push	r18
 17a:	3f 93       	push	r19
 17c:	4f 93       	push	r20
 17e:	5f 93       	push	r21
 180:	6f 93       	push	r22
 182:	7f 93       	push	r23
 184:	8f 93       	push	r24
 186:	9f 93       	push	r25
 188:	af 93       	push	r26
 18a:	bf 93       	push	r27
 18c:	cf 93       	push	r28
 18e:	ef 93       	push	r30
 190:	ff 93       	push	r31
 192:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 196:	8d e0       	ldi	r24, 0x0D	; 13
 198:	91 e0       	ldi	r25, 0x01	; 1
 19a:	0e 94 5f 00 	call	0xbe	; 0xbe <Buffer_Esta_Lleno>
 19e:	81 11       	cpse	r24, r1
 1a0:	05 c0       	rjmp	.+10     	; 0x1ac <__vector_18+0x3e>
 1a2:	6c 2f       	mov	r22, r28
 1a4:	8d e0       	ldi	r24, 0x0D	; 13
 1a6:	91 e0       	ldi	r25, 0x01	; 1
 1a8:	0e 94 6a 00 	call	0xd4	; 0xd4 <Buffer_Add>
 1ac:	ff 91       	pop	r31
 1ae:	ef 91       	pop	r30
 1b0:	cf 91       	pop	r28
 1b2:	bf 91       	pop	r27
 1b4:	af 91       	pop	r26
 1b6:	9f 91       	pop	r25
 1b8:	8f 91       	pop	r24
 1ba:	7f 91       	pop	r23
 1bc:	6f 91       	pop	r22
 1be:	5f 91       	pop	r21
 1c0:	4f 91       	pop	r20
 1c2:	3f 91       	pop	r19
 1c4:	2f 91       	pop	r18
 1c6:	0f 90       	pop	r0
 1c8:	0f be       	out	0x3f, r0	; 63
 1ca:	0f 90       	pop	r0
 1cc:	1f 90       	pop	r1
 1ce:	18 95       	reti

000001d0 <Usart_Inicializar_Buffer>:
 1d0:	8d e0       	ldi	r24, 0x0D	; 13
 1d2:	91 e0       	ldi	r25, 0x01	; 1
 1d4:	0e 94 53 00 	call	0xa6	; 0xa6 <Buffer_Inicializar>
 1d8:	e2 e0       	ldi	r30, 0x02	; 2
 1da:	f1 e0       	ldi	r31, 0x01	; 1
 1dc:	16 82       	std	Z+6, r1	; 0x06
 1de:	17 82       	std	Z+7, r1	; 0x07
 1e0:	10 86       	std	Z+8, r1	; 0x08
 1e2:	11 86       	std	Z+9, r1	; 0x09
 1e4:	12 86       	std	Z+10, r1	; 0x0a
 1e6:	15 82       	std	Z+5, r1	; 0x05
 1e8:	12 82       	std	Z+2, r1	; 0x02
 1ea:	14 82       	std	Z+4, r1	; 0x04
 1ec:	13 82       	std	Z+3, r1	; 0x03
 1ee:	11 82       	std	Z+1, r1	; 0x01
 1f0:	08 95       	ret

000001f2 <Usart_init>:
 1f2:	51 9a       	sbi	0x0a, 1	; 10
 1f4:	50 98       	cbi	0x0a, 0	; 10
 1f6:	e1 ec       	ldi	r30, 0xC1	; 193
 1f8:	f0 e0       	ldi	r31, 0x00	; 0
 1fa:	80 81       	ld	r24, Z
 1fc:	88 61       	ori	r24, 0x18	; 24
 1fe:	80 83       	st	Z, r24
 200:	80 81       	ld	r24, Z
 202:	80 68       	ori	r24, 0x80	; 128
 204:	80 83       	st	Z, r24
 206:	e2 ec       	ldi	r30, 0xC2	; 194
 208:	f0 e0       	ldi	r31, 0x00	; 0
 20a:	80 81       	ld	r24, Z
 20c:	86 63       	ori	r24, 0x36	; 54
 20e:	80 83       	st	Z, r24
 210:	87 e6       	ldi	r24, 0x67	; 103
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 218:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 21c:	0c 94 e8 00 	jmp	0x1d0	; 0x1d0 <Usart_Inicializar_Buffer>

00000220 <Usart_write>:
 220:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 224:	95 ff       	sbrs	r25, 5
 226:	fc cf       	rjmp	.-8      	; 0x220 <Usart_write>
 228:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 22c:	08 95       	ret

0000022e <Usart_Enviar_Dato>:
 22e:	0c 94 10 01 	jmp	0x220	; 0x220 <Usart_write>

00000232 <__divmodhi4>:
 232:	97 fb       	bst	r25, 7
 234:	07 2e       	mov	r0, r23
 236:	16 f4       	brtc	.+4      	; 0x23c <__divmodhi4+0xa>
 238:	00 94       	com	r0
 23a:	07 d0       	rcall	.+14     	; 0x24a <__divmodhi4_neg1>
 23c:	77 fd       	sbrc	r23, 7
 23e:	09 d0       	rcall	.+18     	; 0x252 <__divmodhi4_neg2>
 240:	0e 94 2d 01 	call	0x25a	; 0x25a <__udivmodhi4>
 244:	07 fc       	sbrc	r0, 7
 246:	05 d0       	rcall	.+10     	; 0x252 <__divmodhi4_neg2>
 248:	3e f4       	brtc	.+14     	; 0x258 <__divmodhi4_exit>

0000024a <__divmodhi4_neg1>:
 24a:	90 95       	com	r25
 24c:	81 95       	neg	r24
 24e:	9f 4f       	sbci	r25, 0xFF	; 255
 250:	08 95       	ret

00000252 <__divmodhi4_neg2>:
 252:	70 95       	com	r23
 254:	61 95       	neg	r22
 256:	7f 4f       	sbci	r23, 0xFF	; 255

00000258 <__divmodhi4_exit>:
 258:	08 95       	ret

0000025a <__udivmodhi4>:
 25a:	aa 1b       	sub	r26, r26
 25c:	bb 1b       	sub	r27, r27
 25e:	51 e1       	ldi	r21, 0x11	; 17
 260:	07 c0       	rjmp	.+14     	; 0x270 <__udivmodhi4_ep>

00000262 <__udivmodhi4_loop>:
 262:	aa 1f       	adc	r26, r26
 264:	bb 1f       	adc	r27, r27
 266:	a6 17       	cp	r26, r22
 268:	b7 07       	cpc	r27, r23
 26a:	10 f0       	brcs	.+4      	; 0x270 <__udivmodhi4_ep>
 26c:	a6 1b       	sub	r26, r22
 26e:	b7 0b       	sbc	r27, r23

00000270 <__udivmodhi4_ep>:
 270:	88 1f       	adc	r24, r24
 272:	99 1f       	adc	r25, r25
 274:	5a 95       	dec	r21
 276:	a9 f7       	brne	.-22     	; 0x262 <__udivmodhi4_loop>
 278:	80 95       	com	r24
 27a:	90 95       	com	r25
 27c:	bc 01       	movw	r22, r24
 27e:	cd 01       	movw	r24, r26
 280:	08 95       	ret

00000282 <_exit>:
 282:	f8 94       	cli

00000284 <__stop_program>:
 284:	ff cf       	rjmp	.-2      	; 0x284 <__stop_program>
